import React from 'react';
import { Table, Typography } from 'antd';
import './diff-table.css';

const { Title } = Typography;

const fieldsToShow = [
  'device_name',
  'port',
  'device_type',
  'config_captured_at',
  'location',
  'vip',
  'pool_name',
  'irules'
];

const TransposedFqdnGrouped = ({ data }) => {
  if (!data || data.length === 0) return null;

  // Group by device_type
  const grouped = data.reduce((acc, item) => {
    const type = item.device_type || 'Unknown';
    acc[type] = acc[type] || [];
    acc[type].push(item);
    return acc;
  }, {});

  return (
    <>
      {Object.entries(grouped).map(([deviceType, items]) => {
        // extract FQDNs (using vip.value)
        const fqdnKeys = [...new Set(items.map(i => i.vip?.value || i.vip))];

        const rows = fieldsToShow.map(field => {
          const row = { field };
          fqdnKeys.forEach(fqdn => {
            const match = items.find(i => (i.vip?.value || i.vip) === fqdn);
            row[fqdn] = match ? (match[field]?.value || match[field]) : '-';
          });
          return row;
        });

        const columns = [
          {
            title: 'Field',
            dataIndex: 'field',
            fixed: 'left',
            render: text => <b>{text}</b>
          },
          ...fqdnKeys.map(fqdn => ({
            title: fqdn,
            dataIndex: fqdn,
            render: (text, row) => {
              const values = fqdnKeys.map(k => row[k]);
              const isDiff = new Set(values).size > 1;
              return (
                <span className={isDiff ? 'diff-cell' : ''}>{text}</span>
              );
            }
          }))
        ];

        return (
          <div key={deviceType} style={{ marginBottom: 40 }}>
            <Title level={4}>{deviceType}</Title>
            <Table
              dataSource={rows}
              columns={columns}
              pagination={false}
              rowKey="field"
              bordered
              scroll={{ x: 'max-content' }}
            />
          </div>
        );
      })}
    </>
  );
};

export default TransposedFqdnGrouped;
